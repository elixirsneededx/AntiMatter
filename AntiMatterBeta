--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = string.char;
local v1 = string.byte;
local v2 = string.sub;
local v3 = bit32 or bit;
local v4 = v3.bxor;
local v5 = table.concat;
local v6 = table.insert;
local function v7(v24, v25)
	local v26 = {};
	for v41 = 1, #v24 do
		v6(v26, v0(v4(v1(v2(v24, v41, v41 + 1)), v1(v2(v25, 1 + (v41 % #v25), 1 + (v41 % #v25) + 1))) % 256));
	end
	return v5(v26);
end
local v8 = tonumber;
local v9 = string.byte;
local v10 = string.char;
local v11 = string.sub;
local v12 = string.gsub;
local v13 = string.rep;
local v14 = table.concat;
local v15 = table.insert;
local v16 = math.ldexp;
local v17 = getfenv or function()
	return _ENV;
end;
local v18 = setmetatable;
local v19 = pcall;
local v20 = select;
local v21 = unpack or table.unpack;
local v22 = tonumber;
local function v23(v27, v28, ...)
	local v29 = 1;
	local v30;
	v27 = v12(v11(v27, 5), v7("\167\207", "\149\137\225\34"), function(v42)
		if (v9(v42, 2) == 81) then
			local v93 = 0;
			while true do
				if (v93 == 0) then
					v30 = v8(v11(v42, 1, 1));
					return "";
				end
			end
		else
			local v94 = v10(v8(v42, 16));
			if v30 then
				local v103 = 0;
				local v104;
				while true do
					if (0 == v103) then
						v104 = v13(v94, v30);
						v30 = nil;
						v103 = 1;
					end
					if (1 == v103) then
						return v104;
					end
				end
			else
				return v94;
			end
		end
	end);
	local function v31(v43, v44, v45)
		if v45 then
			local v95 = 0;
			local v96;
			while true do
				if (v95 == 0) then
					v96 = (v43 / (2 ^ (v44 - 1))) % ((5 - 3) ^ (((v45 - 1) - (v44 - 1)) + 1));
					return v96 - (v96 % 1);
				end
			end
		else
			local v97 = 0;
			local v98;
			while true do
				if (v97 == 0) then
					v98 = 2 ^ (v44 - 1);
					return (((v43 % (v98 + v98)) >= v98) and 1) or 0;
				end
			end
		end
	end
	local function v32()
		local v46 = 0;
		local v47;
		while true do
			if (1 == v46) then
				return v47;
			end
			if (v46 == 0) then
				v47 = v9(v27, v29, v29);
				v29 = v29 + (2 - 1);
				v46 = 1;
			end
		end
	end
	local function v33()
		local v48, v49 = v9(v27, v29, v29 + 2);
		v29 = v29 + 2;
		return (v49 * 256) + v48;
	end
	local function v34()
		local v50 = 0;
		local v51;
		local v52;
		local v53;
		local v54;
		while true do
			if (1 == v50) then
				return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51;
			end
			if (0 == v50) then
				v51, v52, v53, v54 = v9(v27, v29, v29 + 3);
				v29 = v29 + 4;
				v50 = 1;
			end
		end
	end
	local function v35()
		local v55 = 0;
		local v56;
		local v57;
		local v58;
		local v59;
		local v60;
		local v61;
		while true do
			if (v55 == 3) then
				if (v60 == 0) then
					if (v59 == 0) then
						return v61 * 0;
					else
						v60 = 1;
						v58 = 0;
					end
				elseif (v60 == 2047) then
					return ((v59 == 0) and (v61 * ((932 - (857 + 74)) / 0))) or (v61 * NaN);
				end
				return v16(v61, v60 - 1023) * (v58 + (v59 / (2 ^ 52)));
			end
			if (v55 == 2) then
				v60 = v31(v57, 21, 31);
				v61 = ((v31(v57, 82 - 50) == 1) and -1) or (620 - (555 + 64));
				v55 = 3;
			end
			if (v55 == 1) then
				v58 = 1;
				v59 = (v31(v57, 1 - 0, 20) * (2 ^ 32)) + v56;
				v55 = 2;
			end
			if (v55 == 0) then
				v56 = v34();
				v57 = v34();
				v55 = 1;
			end
		end
	end
	local function v36(v62)
		local v63 = 0;
		local v64;
		local v65;
		while true do
			if (1 == v63) then
				v64 = v11(v27, v29, (v29 + v62) - (569 - (367 + 201)));
				v29 = v29 + v62;
				v63 = 2;
			end
			if (v63 == 0) then
				v64 = nil;
				if not v62 then
					local v119 = 0;
					while true do
						if (v119 == 0) then
							v62 = v34();
							if (v62 == 0) then
								return "";
							end
							break;
						end
					end
				end
				v63 = 1;
			end
			if (v63 == 2) then
				v65 = {};
				for v105 = 1, #v64 do
					v65[v105] = v10(v9(v11(v64, v105, v105)));
				end
				v63 = 3;
			end
			if (v63 == 3) then
				return v14(v65);
			end
		end
	end
	local v37 = v34;
	local function v38(...)
		return {...}, v20("#", ...);
	end
	local function v39()
		local v66 = 0;
		local v67;
		local v68;
		local v69;
		local v70;
		local v71;
		local v72;
		while true do
			if (2 == v66) then
				for v107 = 1, v34() do
					local v108 = v32();
					if (v31(v108, 1, 1) == 0) then
						local v120 = v31(v108, 2, 3);
						local v121 = v31(v108, 1 + 3, 6);
						local v122 = {v33(),v33(),nil,nil};
						if (v120 == 0) then
							local v125 = 0;
							while true do
								if (v125 == 0) then
									v122[3] = v33();
									v122[4] = v33();
									break;
								end
							end
						elseif (v120 == (1638 - (1523 + 114))) then
							v122[3] = v34();
						elseif (v120 == 2) then
							v122[3] = v34() - (2 ^ 16);
						elseif (v120 == (3 + 0)) then
							v122[3] = v34() - (2 ^ 16);
							v122[4] = v33();
						end
						if (v31(v121, 1, 1) == 1) then
							v122[2] = v72[v122[2]];
						end
						if (v31(v121, 2, 2) == 1) then
							v122[3] = v72[v122[3]];
						end
						if (v31(v121, 3, 3) == (1 - 0)) then
							v122[4] = v72[v122[4]];
						end
						v67[v107] = v122;
					end
				end
				for v109 = 1, v34() do
					v68[v109 - (1066 - (68 + 997))] = v39();
				end
				return v70;
			end
			if (1 == v66) then
				v71 = v34();
				v72 = {};
				for v111 = 1, v71 do
					local v112 = 0;
					local v113;
					local v114;
					while true do
						if (v112 == 0) then
							v113 = v32();
							v114 = nil;
							v112 = 1;
						end
						if (v112 == 1) then
							if (v113 == 1) then
								v114 = v32() ~= 0;
							elseif (v113 == 2) then
								v114 = v35();
							elseif (v113 == 3) then
								v114 = v36();
							end
							v72[v111] = v114;
							break;
						end
					end
				end
				v70[3] = v32();
				v66 = 2;
			end
			if (v66 == 0) then
				v67 = {};
				v68 = {};
				v69 = {};
				v70 = {v67,v68,nil,v69};
				v66 = 1;
			end
		end
	end
	local function v40(v73, v74, v75)
		local v76 = v73[1];
		local v77 = v73[1272 - (226 + 1044)];
		local v78 = v73[3];
		return function(...)
			local v79 = v76;
			local v80 = v77;
			local v81 = v78;
			local v82 = v38;
			local v83 = 1;
			local v84 = -1;
			local v85 = {};
			local v86 = {...};
			local v87 = v20("#", ...) - 1;
			local v88 = {};
			local v89 = {};
			for v99 = 0, v87 do
				if (v99 >= v81) then
					v85[v99 - v81] = v86[v99 + 1];
				else
					v89[v99] = v86[v99 + (4 - 3)];
				end
			end
			local v90 = (v87 - v81) + 1;
			local v91;
			local v92;
			while true do
				v91 = v79[v83];
				v92 = v91[118 - (32 + 85)];
				if (v92 <= 58) then
					if (v92 <= 28) then
						if (v92 <= (13 + 0)) then
							if (v92 <= (2 + 4)) then
								if (v92 <= 2) then
									if (v92 <= 0) then
										v89[v91[2]] = v91[3] ~= (957 - (892 + 65));
									elseif (v92 == 1) then
										local v153 = v91[4 - 2];
										local v154 = v89[v153 + 2];
										local v155 = v89[v153] + v154;
										v89[v153] = v155;
										if (v154 > 0) then
											if (v155 <= v89[v153 + (1 - 0)]) then
												local v479 = 0;
												while true do
													if (v479 == 0) then
														v83 = v91[3];
														v89[v153 + 3] = v155;
														break;
													end
												end
											end
										elseif (v155 >= v89[v153 + 1]) then
											v83 = v91[4 - 1];
											v89[v153 + 3] = v155;
										end
									else
										do
											return;
										end
									end
								elseif (v92 <= 4) then
									if (v92 > 3) then
										local v157 = 0;
										local v158;
										local v159;
										local v160;
										while true do
											if (v157 == 0) then
												v158 = v91[352 - (87 + 263)];
												v159 = v89[v158];
												v157 = 1;
											end
											if (1 == v157) then
												v160 = v91[3];
												for v482 = 1, v160 do
													v159[v482] = v89[v158 + v482];
												end
												break;
											end
										end
									else
										local v161 = 0;
										local v162;
										local v163;
										while true do
											if (v161 == 0) then
												v162 = v91[182 - (67 + 113)];
												v163 = v89[v162];
												v161 = 1;
											end
											if (v161 == 1) then
												for v485 = v162 + 1, v84 do
													v15(v163, v89[v485]);
												end
												break;
											end
										end
									end
								elseif (v92 > 5) then
									local v164 = 0;
									local v165;
									while true do
										if (v164 == 0) then
											v165 = v91[2];
											v89[v165] = v89[v165]();
											break;
										end
									end
								else
									local v166 = 0;
									local v167;
									local v168;
									local v169;
									local v170;
									while true do
										if (0 == v166) then
											v167 = v91[2];
											v168, v169 = v82(v89[v167](v21(v89, v167 + 1, v91[3])));
											v166 = 1;
										end
										if (v166 == 1) then
											v84 = (v169 + v167) - 1;
											v170 = 0;
											v166 = 2;
										end
										if (v166 == 2) then
											for v486 = v167, v84 do
												local v487 = 0;
												while true do
													if (v487 == 0) then
														v170 = v170 + 1;
														v89[v486] = v168[v170];
														break;
													end
												end
											end
											break;
										end
									end
								end
							elseif (v92 <= 9) then
								if (v92 <= 7) then
									v89[v91[2 + 0]][v89[v91[3]]] = v91[4];
								elseif (v92 > 8) then
									local v171 = v91[4 - 2];
									do
										return v89[v171](v21(v89, v171 + 1, v91[3]));
									end
								elseif (v89[v91[2]] < v89[v91[4]]) then
									v83 = v83 + 1 + 0;
								else
									v83 = v91[3];
								end
							elseif (v92 <= 11) then
								if (v92 > 10) then
									v89[v91[2]][v89[v91[3]]] = v89[v91[4]];
								else
									v89[v91[2]][v91[3]] = v91[4];
								end
							elseif (v92 == (47 - 35)) then
								if (v89[v91[2]] ~= v91[4]) then
									v83 = v83 + 1;
								else
									v83 = v91[955 - (802 + 150)];
								end
							else
								local v176 = v91[2];
								do
									return v21(v89, v176, v84);
								end
							end
						elseif (v92 <= 20) then
							if (v92 <= 16) then
								if (v92 <= 14) then
									do
										return v89[v91[2]]();
									end
								elseif (v92 == 15) then
									for v346 = v91[2], v91[3] do
										v89[v346] = nil;
									end
								else
									local v177 = 0;
									local v178;
									local v179;
									local v180;
									while true do
										if (v177 == 1) then
											v180 = v91[3];
											for v488 = 1, v180 do
												v179[v488] = v89[v178 + v488];
											end
											break;
										end
										if (v177 == 0) then
											v178 = v91[2];
											v179 = v89[v178];
											v177 = 1;
										end
									end
								end
							elseif (v92 <= (48 - 30)) then
								if (v92 == 17) then
									v83 = v91[3];
								else
									v89[v91[2]] = v75[v91[3]];
								end
							elseif (v92 > 19) then
								local v184 = 0;
								local v185;
								local v186;
								while true do
									if (v184 == 1) then
										v89[v185 + 1] = v186;
										v89[v185] = v186[v91[4]];
										break;
									end
									if (v184 == 0) then
										v185 = v91[2];
										v186 = v89[v91[5 - 2]];
										v184 = 1;
									end
								end
							else
								v89[v91[2]] = v89[v91[3]] * v89[v91[4]];
							end
						elseif (v92 <= (18 + 6)) then
							if (v92 <= 22) then
								if (v92 == 21) then
									local v188 = v91[2];
									local v189, v190 = v82(v89[v188](v21(v89, v188 + 1, v91[3])));
									v84 = (v190 + v188) - 1;
									local v191 = 997 - (915 + 82);
									for v348 = v188, v84 do
										local v349 = 0;
										while true do
											if (v349 == 0) then
												v191 = v191 + (2 - 1);
												v89[v348] = v189[v191];
												break;
											end
										end
									end
								else
									local v192 = 0;
									local v193;
									local v194;
									local v195;
									while true do
										if (v192 == 0) then
											v193 = v91[2 + 0];
											v194 = v89[v193];
											v192 = 1;
										end
										if (v192 == 1) then
											v195 = v89[v193 + 2];
											if (v195 > 0) then
												if (v194 > v89[v193 + (1 - 0)]) then
													v83 = v91[3];
												else
													v89[v193 + 3] = v194;
												end
											elseif (v194 < v89[v193 + 1]) then
												v83 = v91[3];
											else
												v89[v193 + 3] = v194;
											end
											break;
										end
									end
								end
							elseif (v92 > 23) then
								local v196 = 0;
								local v197;
								local v198;
								local v199;
								while true do
									if (0 == v196) then
										v197 = v91[2];
										v198 = {v89[v197](v21(v89, v197 + 1, v84))};
										v196 = 1;
									end
									if (v196 == 1) then
										v199 = 0;
										for v493 = v197, v91[4] do
											local v494 = 0;
											while true do
												if (v494 == 0) then
													v199 = v199 + 1;
													v89[v493] = v198[v199];
													break;
												end
											end
										end
										break;
									end
								end
							else
								local v200 = v91[2];
								local v201 = v91[4];
								local v202 = v200 + 2;
								local v203 = {v89[v200](v89[v200 + 1], v89[v202])};
								for v350 = 1, v201 do
									v89[v202 + v350] = v203[v350];
								end
								local v204 = v203[1];
								if v204 then
									local v403 = 0;
									while true do
										if (v403 == 0) then
											v89[v202] = v204;
											v83 = v91[3];
											break;
										end
									end
								else
									v83 = v83 + 1;
								end
							end
						elseif (v92 <= (1213 - (1069 + 118))) then
							if (v92 == 25) then
								if (v89[v91[2]] < v89[v91[4]]) then
									v83 = v83 + 1;
								else
									v83 = v91[3];
								end
							else
								v89[v91[2]] = v89[v91[3]] % v89[v91[8 - 4]];
							end
						elseif (v92 == 27) then
							if v89[v91[2]] then
								v83 = v83 + 1;
							else
								v83 = v91[3];
							end
						elseif not v89[v91[2]] then
							v83 = v83 + (1 - 0);
						else
							v83 = v91[3];
						end
					elseif (v92 <= 43) then
						if (v92 <= 35) then
							if (v92 <= 31) then
								if (v92 <= (6 + 23)) then
									v83 = v91[3];
								elseif (v92 == 30) then
									v89[v91[2]] = v89[v91[3]] - v89[v91[4]];
								else
									v89[v91[2]] = v91[3] ~= 0;
								end
							elseif (v92 <= 33) then
								if (v92 > 32) then
									v89[v91[2]] = v89[v91[3]] / v91[6 - 2];
								else
									local v209 = 0;
									local v210;
									while true do
										if (0 == v209) then
											v210 = v91[2];
											v89[v210] = v89[v210](v21(v89, v210 + 1 + 0, v91[3]));
											break;
										end
									end
								end
							elseif (v92 > (825 - (368 + 423))) then
								v89[v91[2]][v91[3]] = v89[v91[4]];
							else
								v89[v91[2]] = v74[v91[3]];
							end
						elseif (v92 <= (122 - 83)) then
							if (v92 <= 37) then
								if (v92 == 36) then
									v89[v91[2]] = v89[v91[3]][v91[22 - (10 + 8)]];
								else
									v89[v91[2]] = v89[v91[3]];
								end
							elseif (v92 == (146 - 108)) then
								if (v91[2] == v89[v91[4]]) then
									v83 = v83 + (443 - (416 + 26));
								else
									v83 = v91[3];
								end
							else
								local v219 = 0;
								local v220;
								while true do
									if (v219 == 0) then
										v220 = v91[2];
										v89[v220] = v89[v220](v89[v220 + (3 - 2)]);
										break;
									end
								end
							end
						elseif (v92 <= 41) then
							if (v92 == 40) then
								v89[v91[2]] = v91[3] ~= 0;
								v83 = v83 + 1;
							else
								v89[v91[2]] = #v89[v91[3]];
							end
						elseif (v92 > 42) then
							v74[v91[3]] = v89[v91[2]];
						else
							local v225 = v91[1 + 1];
							local v226 = {};
							for v353 = 1, #v88 do
								local v354 = v88[v353];
								for v408 = 0, #v354 do
									local v409 = v354[v408];
									local v410 = v409[1];
									local v411 = v409[3 - 1];
									if ((v410 == v89) and (v411 >= v225)) then
										local v495 = 0;
										while true do
											if (0 == v495) then
												v226[v411] = v410[v411];
												v409[1] = v226;
												break;
											end
										end
									end
								end
							end
						end
					elseif (v92 <= (488 - (145 + 293))) then
						if (v92 <= 46) then
							if (v92 <= (474 - (44 + 386))) then
								local v142 = 0;
								local v143;
								while true do
									if (v142 == 0) then
										v143 = v91[2];
										do
											return v89[v143](v21(v89, v143 + 1, v91[3]));
										end
										break;
									end
								end
							elseif (v92 > 45) then
								local v227 = v91[2];
								local v228 = v91[4];
								local v229 = v227 + 2;
								local v230 = {v89[v227](v89[v227 + 1], v89[v229])};
								for v356 = 1, v228 do
									v89[v229 + v356] = v230[v356];
								end
								local v231 = v230[1];
								if v231 then
									v89[v229] = v231;
									v83 = v91[3];
								else
									v83 = v83 + 1;
								end
							else
								local v232 = v80[v91[3]];
								local v233;
								local v234 = {};
								v233 = v18({}, {[v7("\13\197\230\62\248\205\42", "\168\82\154\143\80\156")]=function(v359, v360)
									local v361 = 0;
									local v362;
									while true do
										if (0 == v361) then
											v362 = v234[v360];
											return v362[1][v362[2]];
										end
									end
								end,[v7("\186\141\61\14\95\71\135\129\183\43", "\233\229\210\83\107\40\46")]=function(v363, v364, v365)
									local v366 = v234[v364];
									v366[1][v366[2]] = v365;
								end});
								for v368 = 1, v91[4] do
									local v369 = 0;
									local v370;
									while true do
										if (v369 == 1) then
											if (v370[1] == 37) then
												v234[v368 - 1] = {v89,v370[3]};
											else
												v234[v368 - 1] = {v74,v370[3]};
											end
											v88[#v88 + 1 + 0] = v234;
											break;
										end
										if (v369 == 0) then
											v83 = v83 + 1;
											v370 = v79[v83];
											v369 = 1;
										end
									end
								end
								v89[v91[2]] = v40(v232, v233, v75);
							end
						elseif (v92 <= 48) then
							if (v92 == 47) then
								if (v89[v91[2]] == v91[4]) then
									v83 = v83 + 1 + 0;
								else
									v83 = v91[3];
								end
							else
								local v236 = 0;
								local v237;
								while true do
									if (v236 == 0) then
										v237 = v91[2];
										v89[v237](v21(v89, v237 + 1, v84));
										break;
									end
								end
							end
						elseif (v92 > 49) then
							v89[v91[2]] = v75[v91[3]];
						else
							local v240 = 0;
							local v241;
							while true do
								if (v240 == 0) then
									v241 = v91[2];
									v89[v241] = v89[v241](v21(v89, v241 + 1, v91[3]));
									break;
								end
							end
						end
					elseif (v92 <= 54) then
						if (v92 <= 52) then
							if (v92 == 51) then
								v89[v91[2]][v89[v91[3]]] = v91[776 - (201 + 571)];
							else
								local v244 = 0;
								local v245;
								local v246;
								while true do
									if (v244 == 1) then
										for v499 = v245 + 1, v84 do
											v15(v246, v89[v499]);
										end
										break;
									end
									if (v244 == 0) then
										v245 = v91[2];
										v246 = v89[v245];
										v244 = 1;
									end
								end
							end
						elseif (v92 > 53) then
							local v247 = 0;
							local v248;
							local v249;
							while true do
								if (v247 == 1) then
									v89[v248 + 1] = v249;
									v89[v248] = v249[v91[4]];
									break;
								end
								if (v247 == 0) then
									v248 = v91[2];
									v249 = v89[v91[3]];
									v247 = 1;
								end
							end
						else
							local v250 = 0;
							local v251;
							local v252;
							local v253;
							local v254;
							while true do
								if (1 == v250) then
									v84 = (v253 + v251) - (1139 - (116 + 1022));
									v254 = 0 - 0;
									v250 = 2;
								end
								if (v250 == 0) then
									v251 = v91[2];
									v252, v253 = v82(v89[v251](v89[v251 + 1]));
									v250 = 1;
								end
								if (v250 == 2) then
									for v500 = v251, v84 do
										v254 = v254 + 1;
										v89[v500] = v252[v254];
									end
									break;
								end
							end
						end
					elseif (v92 <= 56) then
						if (v92 == 55) then
							for v371 = v91[2], v91[3] do
								v89[v371] = nil;
							end
						else
							local v255 = 0;
							local v256;
							local v257;
							local v258;
							while true do
								if (v255 == 0) then
									v256 = v91[2];
									v257 = v89[v256];
									v255 = 1;
								end
								if (v255 == 1) then
									v258 = v89[v256 + 2];
									if (v258 > 0) then
										if (v257 > v89[v256 + 1]) then
											v83 = v91[3];
										else
											v89[v256 + 3] = v257;
										end
									elseif (v257 < v89[v256 + 1]) then
										v83 = v91[3];
									else
										v89[v256 + 3] = v257;
									end
									break;
								end
							end
						end
					elseif (v92 > 57) then
						v89[v91[2]] = {};
					elseif (v89[v91[2]] == v91[4]) then
						v83 = v83 + 1;
					else
						v83 = v91[3];
					end
				elseif (v92 <= 88) then
					if (v92 <= 73) then
						if (v92 <= 65) then
							if (v92 <= 61) then
								if (v92 <= 59) then
									v89[v91[2]] = v91[3];
								elseif (v92 > 60) then
									do
										return v89[v91[2]]();
									end
								else
									local v260 = v91[2];
									local v261, v262 = v82(v89[v260](v89[v260 + 1]));
									v84 = (v262 + v260) - 1;
									local v263 = 0;
									for v373 = v260, v84 do
										v263 = v263 + 1 + 0;
										v89[v373] = v261[v263];
									end
								end
							elseif (v92 <= 63) then
								if (v92 > 62) then
									local v264 = v91[7 - 5];
									local v265 = {v89[v264](v89[v264 + 1])};
									local v266 = 0;
									for v376 = v264, v91[4] do
										v266 = v266 + 1;
										v89[v376] = v265[v266];
									end
								else
									v89[v91[2]] = #v89[v91[3]];
								end
							elseif (v92 > 64) then
								local v268 = v80[v91[3]];
								local v269;
								local v270 = {};
								v269 = v18({}, {[v7("\254\125\59\216\1\196\90", "\101\161\34\82\182")]=function(v379, v380)
									local v381 = v270[v380];
									return v381[1][v381[2]];
								end,[v7("\215\50\87\251\204\235\140\42\237\21", "\78\136\109\57\158\187\130\226")]=function(v382, v383, v384)
									local v385 = v270[v383];
									v385[1][v385[2]] = v384;
								end});
								for v387 = 1, v91[14 - 10] do
									local v388 = 0;
									local v389;
									while true do
										if (v388 == 1) then
											if (v389[1] == 37) then
												v270[v387 - 1] = {v89,v389[3]};
											else
												v270[v387 - 1] = {v74,v389[3]};
											end
											v88[#v88 + 1] = v270;
											break;
										end
										if (0 == v388) then
											v83 = v83 + 1;
											v389 = v79[v83];
											v388 = 1;
										end
									end
								end
								v89[v91[2]] = v40(v268, v269, v75);
							else
								local v272 = v91[861 - (814 + 45)];
								local v273 = {};
								for v390 = 1, #v88 do
									local v391 = v88[v390];
									for v416 = 0, #v391 do
										local v417 = 0;
										local v418;
										local v419;
										local v420;
										while true do
											if (v417 == 1) then
												v420 = v418[2];
												if ((v419 == v89) and (v420 >= v272)) then
													v273[v420] = v419[v420];
													v418[1] = v273;
												end
												break;
											end
											if (v417 == 0) then
												v418 = v391[v416];
												v419 = v418[2 - 1];
												v417 = 1;
											end
										end
									end
								end
							end
						elseif (v92 <= 69) then
							if (v92 <= 67) then
								if (v92 > 66) then
									local v274 = 0;
									local v275;
									while true do
										if (v274 == 0) then
											v275 = v91[2];
											v89[v275](v89[v275 + 1]);
											break;
										end
									end
								elseif v89[v91[2]] then
									v83 = v83 + 1;
								else
									v83 = v91[3];
								end
							elseif (v92 == 68) then
								local v276 = v91[2];
								local v277 = {v89[v276](v21(v89, v276 + 1, v84))};
								local v278 = 0 + 0;
								for v392 = v276, v91[4] do
									local v393 = 0;
									while true do
										if (v393 == 0) then
											v278 = v278 + 1;
											v89[v392] = v277[v278];
											break;
										end
									end
								end
							else
								v89[v91[2]] = {};
							end
						elseif (v92 <= 71) then
							if (v92 == 70) then
								local v280 = 0;
								local v281;
								local v282;
								local v283;
								while true do
									if (0 == v280) then
										v281 = v91[2];
										v282 = v89[v281 + 2];
										v280 = 1;
									end
									if (v280 == 1) then
										v283 = v89[v281] + v282;
										v89[v281] = v283;
										v280 = 2;
									end
									if (v280 == 2) then
										if (v282 > 0) then
											if (v283 <= v89[v281 + 1]) then
												local v543 = 0;
												while true do
													if (v543 == 0) then
														v83 = v91[3];
														v89[v281 + 3] = v283;
														break;
													end
												end
											end
										elseif (v283 >= v89[v281 + 1]) then
											v83 = v91[3];
											v89[v281 + 3] = v283;
										end
										break;
									end
								end
							else
								do
									return;
								end
							end
						elseif (v92 > 72) then
							v89[v91[2]] = v89[v91[3]][v89[v91[4]]];
						else
							v89[v91[2]][v91[3]] = v89[v91[2 + 2]];
						end
					elseif (v92 <= 80) then
						if (v92 <= (961 - (261 + 624))) then
							if (v92 <= 74) then
								v89[v91[2]] = v89[v91[3]][v91[6 - 2]];
							elseif (v92 == 75) then
								if (v91[2] == v89[v91[4]]) then
									v83 = v83 + 1;
								else
									v83 = v91[3];
								end
							else
								local v288 = v91[2];
								v89[v288] = v89[v288]();
							end
						elseif (v92 <= 78) then
							if (v92 == 77) then
								if not v89[v91[2]] then
									v83 = v83 + 1;
								else
									v83 = v91[3];
								end
							else
								v89[v91[2]] = v89[v91[3]] - v89[v91[4]];
							end
						elseif (v92 > 79) then
							local v291 = v91[2];
							v89[v291](v89[v291 + (1081 - (1020 + 60))]);
						else
							v89[v91[2]] = v91[3] ~= 0;
							v83 = v83 + 1;
						end
					elseif (v92 <= (1507 - (630 + 793))) then
						if (v92 <= (277 - 195)) then
							if (v92 == 81) then
								v74[v91[3]] = v89[v91[2]];
							else
								v89[v91[2]] = v40(v80[v91[3]], nil, v75);
							end
						elseif (v92 == 83) then
							v89[v91[2]] = v74[v91[14 - 11]];
						else
							v89[v91[2]] = v89[v91[3]] % v91[4];
						end
					elseif (v92 <= 86) then
						if (v92 == (34 + 51)) then
							v89[v91[2]] = v89[v91[3]];
						else
							local v301 = v91[2];
							v89[v301] = v89[v301](v89[v301 + 1]);
						end
					elseif (v92 > 87) then
						local v303 = v91[2];
						v89[v303](v21(v89, v303 + 1, v91[3]));
					elseif (v89[v91[2]] ~= v91[4]) then
						v83 = v83 + 1;
					else
						v83 = v91[3];
					end
				elseif (v92 <= 103) then
					if (v92 <= 95) then
						if (v92 <= 91) then
							if (v92 <= 89) then
								local v148 = 0;
								local v149;
								local v150;
								local v151;
								while true do
									if (v148 == 0) then
										v149 = v91[2];
										v150 = {v89[v149](v21(v89, v149 + 1, v91[9 - 6]))};
										v148 = 1;
									end
									if (1 == v148) then
										v151 = 0;
										for v425 = v149, v91[4] do
											v151 = v151 + 1;
											v89[v425] = v150[v151];
										end
										break;
									end
								end
							elseif (v92 == 90) then
								local v304 = 0;
								local v305;
								while true do
									if (v304 == 0) then
										v305 = v91[2];
										do
											return v21(v89, v305, v305 + v91[3]);
										end
										break;
									end
								end
							else
								v89[v91[2]] = v91[3] + v89[v91[1751 - (760 + 987)]];
							end
						elseif (v92 <= 93) then
							if (v92 == 92) then
								v89[v91[2]] = v89[v91[3]] * v89[v91[4]];
							else
								v89[v91[2]] = v89[v91[3]][v89[v91[4]]];
							end
						elseif (v92 > 94) then
							local v310 = v91[2];
							local v311, v312 = v82(v89[v310](v21(v89, v310 + 1, v84)));
							v84 = (v312 + v310) - 1;
							local v313 = 0;
							for v395 = v310, v84 do
								local v396 = 0;
								while true do
									if (v396 == 0) then
										v313 = v313 + 1;
										v89[v395] = v311[v313];
										break;
									end
								end
							end
						else
							v89[v91[2]]();
						end
					elseif (v92 <= 99) then
						if (v92 <= 97) then
							if (v92 == 96) then
								v89[v91[2]] = v91[3];
							else
								local v316 = 0;
								local v317;
								local v318;
								local v319;
								while true do
									if (v316 == 1) then
										v319 = 0;
										for v509 = v317, v91[4] do
											local v510 = 0;
											while true do
												if (v510 == 0) then
													v319 = v319 + 1;
													v89[v509] = v318[v319];
													break;
												end
											end
										end
										break;
									end
									if (v316 == 0) then
										v317 = v91[2];
										v318 = {v89[v317](v21(v89, v317 + 1, v91[3]))};
										v316 = 1;
									end
								end
							end
						elseif (v92 > 98) then
							do
								return v89[v91[1915 - (1789 + 124)]];
							end
						else
							local v320 = v91[2];
							do
								return v21(v89, v320, v84);
							end
						end
					elseif (v92 <= 101) then
						if (v92 == (866 - (745 + 21))) then
							local v321 = 0;
							local v322;
							local v323;
							local v324;
							local v325;
							while true do
								if (v321 == 1) then
									v84 = (v324 + v322) - (1 + 0);
									v325 = 0;
									v321 = 2;
								end
								if (v321 == 0) then
									v322 = v91[2];
									v323, v324 = v82(v89[v322](v21(v89, v322 + 1, v84)));
									v321 = 1;
								end
								if (v321 == 2) then
									for v511 = v322, v84 do
										v325 = v325 + 1;
										v89[v511] = v323[v325];
									end
									break;
								end
							end
						else
							v89[v91[2]] = v89[v91[3]] / v91[4];
						end
					elseif (v92 > 102) then
						local v327 = v91[2];
						v89[v327](v21(v89, v327 + 1, v84));
					else
						v89[v91[2]][v89[v91[3]]] = v89[v91[4]];
					end
				elseif (v92 <= 110) then
					if (v92 <= 106) then
						if (v92 <= 104) then
							v89[v91[2]] = v89[v91[7 - 4]] + v91[4];
						elseif (v92 == 105) then
							local v330 = v91[2];
							local v331 = v89[v330];
							for v397 = v330 + 1, v91[3] do
								v15(v331, v89[v397]);
							end
						else
							v89[v91[2]]();
						end
					elseif (v92 <= 108) then
						if (v92 > 107) then
							do
								return v89[v91[2]];
							end
						else
							v89[v91[2]] = v89[v91[3]] % v91[4];
						end
					elseif (v92 > (427 - 318)) then
						if (v89[v91[2]] ~= v89[v91[4]]) then
							v83 = v83 + 1;
						else
							v83 = v91[3];
						end
					else
						v89[v91[2]] = v91[3] + v89[v91[4]];
					end
				elseif (v92 <= (1 + 113)) then
					if (v92 <= 112) then
						if (v92 == 111) then
							v89[v91[2 + 0]] = v40(v80[v91[3]], nil, v75);
						elseif (v89[v91[2]] ~= v89[v91[4]]) then
							v83 = v83 + 1;
						else
							v83 = v91[3];
						end
					elseif (v92 > 113) then
						v89[v91[2]][v91[3]] = v91[4];
					else
						local v337 = 0;
						local v338;
						while true do
							if (v337 == 0) then
								v338 = v91[2];
								v89[v338] = v89[v338](v21(v89, v338 + (1056 - (87 + 968)), v84));
								break;
							end
						end
					end
				elseif (v92 <= (510 - 394)) then
					if (v92 > 115) then
						v89[v91[2]] = v89[v91[3]] % v89[v91[4]];
					else
						local v340 = 0;
						local v341;
						while true do
							if (0 == v340) then
								v341 = v91[2];
								v89[v341] = v89[v341](v21(v89, v341 + 1, v84));
								break;
							end
						end
					end
				elseif (v92 == 117) then
					v89[v91[2]] = v89[v91[3]] + v91[4];
				else
					local v343 = v91[2];
					local v344 = {v89[v343](v89[v343 + 1])};
					local v345 = 0;
					for v398 = v343, v91[4 + 0] do
						v345 = v345 + 1;
						v89[v398] = v344[v345];
					end
				end
				v83 = v83 + 1;
			end
		end;
	end
	return v40(v39(), {}, v28)(...);
end
return v23("LOL!", v17(), ...);
